
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\plot_create_pipeline_v2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_plot_create_pipeline_v2.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_plot_create_pipeline_v2.py:


Create pipeline (pretrained)
=============================

Sample file to create a pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

First of all, lets import the main libraries and load the iris data.

.. GENERATED FROM PYTHON SOURCE LINES 11-52

.. code-block:: default
   :lineno-start: 12


    # Generic
    import os
    import yaml
    import time
    import torch
    import pickle
    import pprint
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt

    # Libraries
    from pathlib import Path

    # Own
    from ls2d.utils import _load_pickle
    from ls2d.utils import _dump_pickle
    from ls2d.utils import AttrDict
    from ls2d.pipeline import PipelineMemory

    # ------------------
    # Load config
    # ------------------
    # Configuration file
    YAML_PATH = '../datasets/iris/settings.iris.yaml'

    # Load configuration from file
    with open(YAML_PATH) as file:
        CONFIG = AttrDict(yaml.full_load(file))

    # ------------------
    # Load data
    # ------------------
    # Load data
    data = pd.read_csv('..' / Path(CONFIG.filepath))
    data = data.dropna(how='any', subset=CONFIG.features)

    # Show
    data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>sepal length (cm)</th>
          <th>sepal width (cm)</th>
          <th>petal length (cm)</th>
          <th>petal width (cm)</th>
          <th>target</th>
          <th>label</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>5.1</td>
          <td>3.5</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>1</th>
          <td>4.9</td>
          <td>3.0</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>2</th>
          <td>4.7</td>
          <td>3.2</td>
          <td>1.3</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>3</th>
          <td>4.6</td>
          <td>3.1</td>
          <td>1.5</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>4</th>
          <td>5.0</td>
          <td>3.6</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>145</th>
          <td>6.7</td>
          <td>3.0</td>
          <td>5.2</td>
          <td>2.3</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>146</th>
          <td>6.3</td>
          <td>2.5</td>
          <td>5.0</td>
          <td>1.9</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>147</th>
          <td>6.5</td>
          <td>3.0</td>
          <td>5.2</td>
          <td>2.0</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>148</th>
          <td>6.2</td>
          <td>3.4</td>
          <td>5.4</td>
          <td>2.3</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>149</th>
          <td>5.9</td>
          <td>3.0</td>
          <td>5.1</td>
          <td>1.8</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
      </tbody>
    </table>
    <p>150 rows Ã— 6 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-54

Now, lets create our own pipeline

.. GENERATED FROM PYTHON SOURCE LINES 54-86

.. code-block:: default
   :lineno-start: 55


    # Libraries
    from sklearn.preprocessing import StandardScaler
    from sklearn.pipeline import Pipeline

    class Sample:
        def fit(self, X, y=None):
            return self

        def transform(self, X, y=None):
            return X[:,:2]


    # Create pipeline
    pipe = Pipeline(steps=[
        ('std', StandardScaler()),
        ('smp', Sample())
    ])

    # Fit
    pipe.fit(data[CONFIG.features], None)

    # Define pipeline path
    path = Path('./objects') / 'plot_create_pipeline_v1'
    filename = '%s.p' % time.strftime("%Y%m%d-%H%M%S")

    # Create folder (if it does not exist)
    path.mkdir(parents=True, exist_ok=True)

    # Save it in your desired path
    #_dump_pickle(path / filename, pipe)








.. GENERATED FROM PYTHON SOURCE LINES 87-98

Now you can create a new workbench. For the app to run, you
need to include the yaml configuration file and must be named
``settings.yaml``. Also, ensure that all the paths are correct.

.. code-block:: console

     workbench
       |- xxxxxx.p
       |- std-pca/xxxxx.p
       |- settings.yaml


.. GENERATED FROM PYTHON SOURCE LINES 100-107

In addition, it is possible to copy the created pipeline into an
existing workbench. Ensure that the created pipeline is compatible
with the existing workbench configuration.

.. code-block:: console

  $ cp <path_pipe> ../outputs/workbench/manual/xxxx.p

.. GENERATED FROM PYTHON SOURCE LINES 109-114

.. note:: The search.py file computes the performance metrics and
          stores them in the ``results.csv`` file within the workbench.
          Since we have not used that script to generate the models,
          the performance metrics are not available and thus they do
          not appear in the app.

.. GENERATED FROM PYTHON SOURCE LINES 116-122

Run the server et voila!

.. code-block:: console

 $ python server.py


.. GENERATED FROM PYTHON SOURCE LINES 124-125

Lets use the pipeline locally

.. GENERATED FROM PYTHON SOURCE LINES 125-144

.. code-block:: default
   :lineno-start: 126


    # Compute embeddings
    data[['x', 'y']] = pipe.transform(data[CONFIG.features])

    # Import ploty
    import plotly.express as px

    # The possible templates are ["plotly", "plotly_white", "plotly_dark",
    # "ggplot2", "seaborn", "simple_white", "none"]:

    # Display
    fig = px.scatter(data, x="x", y="y", color="label",
        hover_data=data.columns.tolist(),
        color_discrete_sequence=px.colors.qualitative.Pastel2,
        template='none')

    # Show
    fig






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-2.4.2.min.js"></script>                <div id="302a0ad0-ea20-4819-bcc5-b250141885fd" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("302a0ad0-ea20-4819-bcc5-b250141885fd")) {                    Plotly.newPlot(                        "302a0ad0-ea20-4819-bcc5-b250141885fd",                        [{"customdata":[[5.1,3.5,1.4,0.2,0,"setosa"],[4.9,3.0,1.4,0.2,0,"setosa"],[4.7,3.2,1.3,0.2,0,"setosa"],[4.6,3.1,1.5,0.2,0,"setosa"],[5.0,3.6,1.4,0.2,0,"setosa"],[5.4,3.9,1.7,0.4,0,"setosa"],[4.6,3.4,1.4,0.3,0,"setosa"],[5.0,3.4,1.5,0.2,0,"setosa"],[4.4,2.9,1.4,0.2,0,"setosa"],[4.9,3.1,1.5,0.1,0,"setosa"],[5.4,3.7,1.5,0.2,0,"setosa"],[4.8,3.4,1.6,0.2,0,"setosa"],[4.8,3.0,1.4,0.1,0,"setosa"],[4.3,3.0,1.1,0.1,0,"setosa"],[5.8,4.0,1.2,0.2,0,"setosa"],[5.7,4.4,1.5,0.4,0,"setosa"],[5.4,3.9,1.3,0.4,0,"setosa"],[5.1,3.5,1.4,0.3,0,"setosa"],[5.7,3.8,1.7,0.3,0,"setosa"],[5.1,3.8,1.5,0.3,0,"setosa"],[5.4,3.4,1.7,0.2,0,"setosa"],[5.1,3.7,1.5,0.4,0,"setosa"],[4.6,3.6,1.0,0.2,0,"setosa"],[5.1,3.3,1.7,0.5,0,"setosa"],[4.8,3.4,1.9,0.2,0,"setosa"],[5.0,3.0,1.6,0.2,0,"setosa"],[5.0,3.4,1.6,0.4,0,"setosa"],[5.2,3.5,1.5,0.2,0,"setosa"],[5.2,3.4,1.4,0.2,0,"setosa"],[4.7,3.2,1.6,0.2,0,"setosa"],[4.8,3.1,1.6,0.2,0,"setosa"],[5.4,3.4,1.5,0.4,0,"setosa"],[5.2,4.1,1.5,0.1,0,"setosa"],[5.5,4.2,1.4,0.2,0,"setosa"],[4.9,3.1,1.5,0.2,0,"setosa"],[5.0,3.2,1.2,0.2,0,"setosa"],[5.5,3.5,1.3,0.2,0,"setosa"],[4.9,3.6,1.4,0.1,0,"setosa"],[4.4,3.0,1.3,0.2,0,"setosa"],[5.1,3.4,1.5,0.2,0,"setosa"],[5.0,3.5,1.3,0.3,0,"setosa"],[4.5,2.3,1.3,0.3,0,"setosa"],[4.4,3.2,1.3,0.2,0,"setosa"],[5.0,3.5,1.6,0.6,0,"setosa"],[5.1,3.8,1.9,0.4,0,"setosa"],[4.8,3.0,1.4,0.3,0,"setosa"],[5.1,3.8,1.6,0.2,0,"setosa"],[4.6,3.2,1.4,0.2,0,"setosa"],[5.3,3.7,1.5,0.2,0,"setosa"],[5.0,3.3,1.4,0.2,0,"setosa"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"setosa","marker":{"color":"rgb(179,226,205)","symbol":"circle"},"mode":"markers","name":"setosa","orientation":"v","showlegend":true,"type":"scatter","x":[-0.9006811702978088,-1.1430169111851105,-1.3853526520724133,-1.5065205225160652,-1.0218490407414595,-0.537177558966854,-1.5065205225160652,-1.0218490407414595,-1.7488562634033669,-1.1430169111851105,-0.537177558966854,-1.2641847816287624,-1.2641847816287624,-1.870024133847019,-0.05250607719224957,-0.1736739476359004,-0.537177558966854,-0.9006811702978088,-0.1736739476359004,-0.9006811702978088,-0.537177558966854,-0.9006811702978088,-1.5065205225160652,-0.9006811702978088,-1.2641847816287624,-1.0218490407414595,-1.0218490407414595,-0.7795132998541568,-0.7795132998541568,-1.3853526520724133,-1.2641847816287624,-0.537177558966854,-0.7795132998541568,-0.4160096885232032,-1.1430169111851105,-1.0218490407414595,-0.4160096885232032,-1.1430169111851105,-1.7488562634033669,-0.9006811702978088,-1.0218490407414595,-1.6276883929597161,-1.7488562634033669,-1.0218490407414595,-0.9006811702978088,-1.2641847816287624,-0.9006811702978088,-1.5065205225160652,-0.658345429410506,-1.0218490407414595],"xaxis":"x","y":[1.019004351971607,-0.13197947932162468,0.32841405319566835,0.09821728693702184,1.2492011182302534,1.939791417006192,0.7888075857129604,0.7888075857129604,-0.3621762455802712,0.09821728693702184,1.4793978844889,0.7888075857129604,-0.13197947932162468,-0.13197947932162468,2.1699881832648384,3.090775248299425,1.939791417006192,1.019004351971607,1.7095946507475455,1.7095946507475455,0.7888075857129604,1.4793978844889,1.2492011182302534,0.5586108194543139,0.7888075857129604,-0.13197947932162468,0.7888075857129604,1.019004351971607,0.7888075857129604,0.32841405319566835,0.09821728693702184,0.7888075857129604,2.400184949523484,2.6303817157821316,0.09821728693702184,0.32841405319566835,1.019004351971607,1.2492011182302534,-0.13197947932162468,0.7888075857129604,1.019004351971607,-1.7433568431321493,0.32841405319566835,1.019004351971607,1.7095946507475455,-0.13197947932162468,1.7095946507475455,0.32841405319566835,1.4793978844889,0.5586108194543139],"yaxis":"y"},{"customdata":[[7.0,3.2,4.7,1.4,1,"versicolor"],[6.4,3.2,4.5,1.5,1,"versicolor"],[6.9,3.1,4.9,1.5,1,"versicolor"],[5.5,2.3,4.0,1.3,1,"versicolor"],[6.5,2.8,4.6,1.5,1,"versicolor"],[5.7,2.8,4.5,1.3,1,"versicolor"],[6.3,3.3,4.7,1.6,1,"versicolor"],[4.9,2.4,3.3,1.0,1,"versicolor"],[6.6,2.9,4.6,1.3,1,"versicolor"],[5.2,2.7,3.9,1.4,1,"versicolor"],[5.0,2.0,3.5,1.0,1,"versicolor"],[5.9,3.0,4.2,1.5,1,"versicolor"],[6.0,2.2,4.0,1.0,1,"versicolor"],[6.1,2.9,4.7,1.4,1,"versicolor"],[5.6,2.9,3.6,1.3,1,"versicolor"],[6.7,3.1,4.4,1.4,1,"versicolor"],[5.6,3.0,4.5,1.5,1,"versicolor"],[5.8,2.7,4.1,1.0,1,"versicolor"],[6.2,2.2,4.5,1.5,1,"versicolor"],[5.6,2.5,3.9,1.1,1,"versicolor"],[5.9,3.2,4.8,1.8,1,"versicolor"],[6.1,2.8,4.0,1.3,1,"versicolor"],[6.3,2.5,4.9,1.5,1,"versicolor"],[6.1,2.8,4.7,1.2,1,"versicolor"],[6.4,2.9,4.3,1.3,1,"versicolor"],[6.6,3.0,4.4,1.4,1,"versicolor"],[6.8,2.8,4.8,1.4,1,"versicolor"],[6.7,3.0,5.0,1.7,1,"versicolor"],[6.0,2.9,4.5,1.5,1,"versicolor"],[5.7,2.6,3.5,1.0,1,"versicolor"],[5.5,2.4,3.8,1.1,1,"versicolor"],[5.5,2.4,3.7,1.0,1,"versicolor"],[5.8,2.7,3.9,1.2,1,"versicolor"],[6.0,2.7,5.1,1.6,1,"versicolor"],[5.4,3.0,4.5,1.5,1,"versicolor"],[6.0,3.4,4.5,1.6,1,"versicolor"],[6.7,3.1,4.7,1.5,1,"versicolor"],[6.3,2.3,4.4,1.3,1,"versicolor"],[5.6,3.0,4.1,1.3,1,"versicolor"],[5.5,2.5,4.0,1.3,1,"versicolor"],[5.5,2.6,4.4,1.2,1,"versicolor"],[6.1,3.0,4.6,1.4,1,"versicolor"],[5.8,2.6,4.0,1.2,1,"versicolor"],[5.0,2.3,3.3,1.0,1,"versicolor"],[5.6,2.7,4.2,1.3,1,"versicolor"],[5.7,3.0,4.2,1.2,1,"versicolor"],[5.7,2.9,4.2,1.3,1,"versicolor"],[6.2,2.9,4.3,1.3,1,"versicolor"],[5.1,2.5,3.0,1.1,1,"versicolor"],[5.7,2.8,4.1,1.3,1,"versicolor"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"versicolor","marker":{"color":"rgb(253,205,172)","symbol":"circle"},"mode":"markers","name":"versicolor","orientation":"v","showlegend":true,"type":"scatter","x":[1.401508368131566,0.6745011454696588,1.2803404976879151,-0.4160096885232032,0.7956690159133096,-0.1736739476359004,0.5533332750260068,-1.1430169111851105,0.9168368863569605,-0.7795132998541568,-1.0218490407414595,0.06866179325140237,0.18982966369505322,0.31099753413870407,-0.29484181807955234,1.0380047568006125,-0.29484181807955234,-0.05250607719224957,0.432165404582356,-0.29484181807955234,0.06866179325140237,0.31099753413870407,0.5533332750260068,0.31099753413870407,0.6745011454696588,0.9168368863569605,1.1591726272442633,1.0380047568006125,0.18982966369505322,-0.1736739476359004,-0.4160096885232032,-0.4160096885232032,-0.05250607719224957,0.18982966369505322,-0.537177558966854,0.18982966369505322,1.0380047568006125,0.5533332750260068,-0.29484181807955234,-0.4160096885232032,-0.4160096885232032,0.31099753413870407,-0.05250607719224957,-1.0218490407414595,-0.29484181807955234,-0.1736739476359004,-0.1736739476359004,0.432165404582356,-0.9006811702978088,-0.1736739476359004],"xaxis":"x","y":[0.32841405319566835,0.32841405319566835,0.09821728693702184,-1.7433568431321493,-0.5923730118389178,-0.5923730118389178,0.5586108194543139,-1.513160076873503,-0.3621762455802712,-0.8225697780975633,-2.433947141908088,-0.13197947932162468,-1.9735536093907948,-0.3621762455802712,-0.3621762455802712,0.09821728693702184,-0.13197947932162468,-0.8225697780975633,-1.9735536093907948,-1.2829633106148564,0.32841405319566835,-0.5923730118389178,-1.2829633106148564,-0.5923730118389178,-0.3621762455802712,-0.13197947932162468,-0.5923730118389178,-0.13197947932162468,-0.3621762455802712,-1.0527665443562098,-1.513160076873503,-1.513160076873503,-0.8225697780975633,-0.8225697780975633,-0.13197947932162468,0.7888075857129604,0.09821728693702184,-1.7433568431321493,-0.13197947932162468,-1.2829633106148564,-1.0527665443562098,-0.13197947932162468,-1.0527665443562098,-1.7433568431321493,-0.8225697780975633,-0.13197947932162468,-0.3621762455802712,-0.3621762455802712,-1.2829633106148564,-0.5923730118389178],"yaxis":"y"},{"customdata":[[6.3,3.3,6.0,2.5,2,"virginica"],[5.8,2.7,5.1,1.9,2,"virginica"],[7.1,3.0,5.9,2.1,2,"virginica"],[6.3,2.9,5.6,1.8,2,"virginica"],[6.5,3.0,5.8,2.2,2,"virginica"],[7.6,3.0,6.6,2.1,2,"virginica"],[4.9,2.5,4.5,1.7,2,"virginica"],[7.3,2.9,6.3,1.8,2,"virginica"],[6.7,2.5,5.8,1.8,2,"virginica"],[7.2,3.6,6.1,2.5,2,"virginica"],[6.5,3.2,5.1,2.0,2,"virginica"],[6.4,2.7,5.3,1.9,2,"virginica"],[6.8,3.0,5.5,2.1,2,"virginica"],[5.7,2.5,5.0,2.0,2,"virginica"],[5.8,2.8,5.1,2.4,2,"virginica"],[6.4,3.2,5.3,2.3,2,"virginica"],[6.5,3.0,5.5,1.8,2,"virginica"],[7.7,3.8,6.7,2.2,2,"virginica"],[7.7,2.6,6.9,2.3,2,"virginica"],[6.0,2.2,5.0,1.5,2,"virginica"],[6.9,3.2,5.7,2.3,2,"virginica"],[5.6,2.8,4.9,2.0,2,"virginica"],[7.7,2.8,6.7,2.0,2,"virginica"],[6.3,2.7,4.9,1.8,2,"virginica"],[6.7,3.3,5.7,2.1,2,"virginica"],[7.2,3.2,6.0,1.8,2,"virginica"],[6.2,2.8,4.8,1.8,2,"virginica"],[6.1,3.0,4.9,1.8,2,"virginica"],[6.4,2.8,5.6,2.1,2,"virginica"],[7.2,3.0,5.8,1.6,2,"virginica"],[7.4,2.8,6.1,1.9,2,"virginica"],[7.9,3.8,6.4,2.0,2,"virginica"],[6.4,2.8,5.6,2.2,2,"virginica"],[6.3,2.8,5.1,1.5,2,"virginica"],[6.1,2.6,5.6,1.4,2,"virginica"],[7.7,3.0,6.1,2.3,2,"virginica"],[6.3,3.4,5.6,2.4,2,"virginica"],[6.4,3.1,5.5,1.8,2,"virginica"],[6.0,3.0,4.8,1.8,2,"virginica"],[6.9,3.1,5.4,2.1,2,"virginica"],[6.7,3.1,5.6,2.4,2,"virginica"],[6.9,3.1,5.1,2.3,2,"virginica"],[5.8,2.7,5.1,1.9,2,"virginica"],[6.8,3.2,5.9,2.3,2,"virginica"],[6.7,3.3,5.7,2.5,2,"virginica"],[6.7,3.0,5.2,2.3,2,"virginica"],[6.3,2.5,5.0,1.9,2,"virginica"],[6.5,3.0,5.2,2.0,2,"virginica"],[6.2,3.4,5.4,2.3,2,"virginica"],[5.9,3.0,5.1,1.8,2,"virginica"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"virginica","marker":{"color":"rgb(203,213,232)","symbol":"circle"},"mode":"markers","name":"virginica","orientation":"v","showlegend":true,"type":"scatter","x":[0.5533332750260068,-0.05250607719224957,1.522676238575217,0.5533332750260068,0.7956690159133096,2.1285155907934734,-1.1430169111851105,1.7650119794625196,1.0380047568006125,1.643844109018869,0.7956690159133096,0.6745011454696588,1.1591726272442633,-0.1736739476359004,-0.05250607719224957,0.6745011454696588,0.7956690159133096,2.2496834612371255,2.2496834612371255,0.18982966369505322,1.2803404976879151,-0.29484181807955234,2.2496834612371255,0.5533332750260068,1.0380047568006125,1.643844109018869,0.432165404582356,0.31099753413870407,0.6745011454696588,1.643844109018869,1.8861798499061717,2.4920192021244283,0.6745011454696588,0.5533332750260068,0.31099753413870407,2.2496834612371255,0.5533332750260068,0.6745011454696588,0.18982966369505322,1.2803404976879151,1.0380047568006125,1.2803404976879151,-0.05250607719224957,1.1591726272442633,1.0380047568006125,1.0380047568006125,0.5533332750260068,0.7956690159133096,0.432165404582356,0.06866179325140237],"xaxis":"x","y":[0.5586108194543139,-0.8225697780975633,-0.13197947932162468,-0.3621762455802712,-0.13197947932162468,-0.13197947932162468,-1.2829633106148564,-0.3621762455802712,-1.2829633106148564,1.2492011182302534,0.32841405319566835,-0.8225697780975633,-0.13197947932162468,-1.2829633106148564,-0.5923730118389178,0.32841405319566835,-0.13197947932162468,1.7095946507475455,-1.0527665443562098,-1.9735536093907948,0.32841405319566835,-0.5923730118389178,-0.5923730118389178,-0.8225697780975633,0.5586108194543139,0.32841405319566835,-0.5923730118389178,-0.13197947932162468,-0.5923730118389178,-0.13197947932162468,-0.5923730118389178,1.7095946507475455,-0.5923730118389178,-0.5923730118389178,-1.0527665443562098,-0.13197947932162468,0.7888075857129604,0.09821728693702184,-0.13197947932162468,0.09821728693702184,0.09821728693702184,0.09821728693702184,-0.8225697780975633,0.32841405319566835,0.5586108194543139,-0.13197947932162468,-1.2829633106148564,-0.13197947932162468,0.7888075857129604,-0.13197947932162468],"yaxis":"y"}],                        {"legend":{"title":{"text":"label"},"tracegroupgap":0},"margin":{"t":60},"template":{"data":{"scatter":[{"type":"scatter"}]}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"x"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"y"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.052 seconds)


.. _sphx_glr_download__examples_plot_create_pipeline_v2.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_create_pipeline_v2.py <plot_create_pipeline_v2.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_create_pipeline_v2.ipynb <plot_create_pipeline_v2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
