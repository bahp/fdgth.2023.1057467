
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/plot_create_pipeline_v1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_plot_create_pipeline_v1.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_plot_create_pipeline_v1.py:


Create pipeline
===============

Sample file to create a pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

First of all, lets import the main libraries and load the iris data.

.. GENERATED FROM PYTHON SOURCE LINES 11-52

.. code-block:: default
   :lineno-start: 12


    # Generic
    import os
    import yaml
    import time
    import torch
    import pickle
    import pprint
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt

    # Libraries
    from pathlib import Path

    # Own
    from ls2d.utils import _load_pickle
    from ls2d.utils import _dump_pickle
    from ls2d.utils import AttrDict
    from ls2d.pipeline import PipelineMemory

    # ------------------
    # Load config
    # ------------------
    # Configuration file
    YAML_PATH = '../datasets/iris/settings.iris.yaml'

    # Load configuration from file
    with open(YAML_PATH) as file:
        CONFIG = AttrDict(yaml.full_load(file))

    # ------------------
    # Load data
    # ------------------
    # Load data
    data = pd.read_csv('..' / Path(CONFIG.filepath))
    data = data.dropna(how='any', subset=CONFIG.features)

    # Show
    data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>sepal length (cm)</th>
          <th>sepal width (cm)</th>
          <th>petal length (cm)</th>
          <th>petal width (cm)</th>
          <th>target</th>
          <th>label</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>5.1</td>
          <td>3.5</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>1</th>
          <td>4.9</td>
          <td>3.0</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>2</th>
          <td>4.7</td>
          <td>3.2</td>
          <td>1.3</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>3</th>
          <td>4.6</td>
          <td>3.1</td>
          <td>1.5</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>4</th>
          <td>5.0</td>
          <td>3.6</td>
          <td>1.4</td>
          <td>0.2</td>
          <td>0</td>
          <td>setosa</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>145</th>
          <td>6.7</td>
          <td>3.0</td>
          <td>5.2</td>
          <td>2.3</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>146</th>
          <td>6.3</td>
          <td>2.5</td>
          <td>5.0</td>
          <td>1.9</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>147</th>
          <td>6.5</td>
          <td>3.0</td>
          <td>5.2</td>
          <td>2.0</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>148</th>
          <td>6.2</td>
          <td>3.4</td>
          <td>5.4</td>
          <td>2.3</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
        <tr>
          <th>149</th>
          <td>5.9</td>
          <td>3.0</td>
          <td>5.1</td>
          <td>1.8</td>
          <td>2</td>
          <td>virginica</td>
        </tr>
      </tbody>
    </table>
    <p>150 rows × 6 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-54

Now, lets create our own pipeline

.. GENERATED FROM PYTHON SOURCE LINES 54-79

.. code-block:: default
   :lineno-start: 55


    # Libraries
    from sklearn.preprocessing import StandardScaler
    from sklearn.decomposition import PCA
    from sklearn.pipeline import Pipeline

    # Create pipeline
    pipe_pca = Pipeline(steps=[
        ('std', StandardScaler()),
        ('pca', PCA(n_components=2))
    ])

    # Fit
    pipe_pca.fit(data[CONFIG.features], None)

    # Define pipeline path
    path = Path('./objects') / 'plot_create_pipeline_v1'
    filename = '%s.p' % time.strftime("%Y%m%d-%H%M%S")

    # Create folder (if it does not exist)
    path.mkdir(parents=True, exist_ok=True)

    # Save it in your desired path
    #_dump_pickle(path / filename, pipe)








.. GENERATED FROM PYTHON SOURCE LINES 80-91

Now you can create a new workbench. For the app to run, you
need to include the yaml configuration file and must be named
``settings.yaml``. Also, ensure that all the paths are correct.

.. code-block:: console

     workbench
       |- xxxxxx.p
       |- std-pca/xxxxx.p
       |- settings.yaml


.. GENERATED FROM PYTHON SOURCE LINES 93-100

In addition, it is possible to copy the created pipeline into an
existing workbench. Ensure that the created pipeline is compatible
with the existing workbench configuration.

.. code-block:: console

  $ cp <path_pipe> ../outputs/workbench/manual/xxxx.p

.. GENERATED FROM PYTHON SOURCE LINES 102-107

.. note:: The search.py file computes the performance metrics and
          stores them in the ``results.csv`` file within the workbench.
          Since we have not used that script to generate the models,
          the performance metrics are not available and thus they do
          not appear in the app.

.. GENERATED FROM PYTHON SOURCE LINES 109-115

Run the server et voila!

.. code-block:: console

 $ python server.py


.. GENERATED FROM PYTHON SOURCE LINES 118-127

Let's create a pipeline wih our own algorithm.

By inheriting from ``BaseEstimator`` we include the methods ``get_params()``
and ``set_params()`` from such class. This might be useful and also helps
to display the pipeline name nicely. Similarly, by inheriting from
``TransformerMixin`` we include the methot ``fit_transform()``.

.. note:: The last step of a sklearn ``Pipeline`` must implement the method
          fit!

.. GENERATED FROM PYTHON SOURCE LINES 127-151

.. code-block:: default
   :lineno-start: 128


    # Import base libraries from sklearn
    from sklearn.base import BaseEstimator    # get_params(), set_params()
    from sklearn.base import TransformerMixin # fit_transform()

    class First(BaseEstimator, TransformerMixin):
        def __init__(self, n):
            self.n = n

        def fit(self, X, y=None):
            return self

        def transform(self, X, y=None):
            return X[:,:self.n]

    # Create pipeline
    pipe_first = Pipeline(steps=[
        ('std', StandardScaler()),
        ('first', First(n=2))
    ])

    # Fit
    pipe_first.fit(data[CONFIG.features])






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;std&#x27;, StandardScaler()), (&#x27;first&#x27;, First(n=2))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" ><label for="sk-estimator-id-1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;std&#x27;, StandardScaler()), (&#x27;first&#x27;, First(n=2))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" ><label for="sk-estimator-id-2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-3" type="checkbox" ><label for="sk-estimator-id-3" class="sk-toggleable__label sk-toggleable__label-arrow">First</label><div class="sk-toggleable__content"><pre>First(n=2)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 152-153

Lets see the PCA embeddings

.. GENERATED FROM PYTHON SOURCE LINES 153-171

.. code-block:: default
   :lineno-start: 154


    # Import ploty
    import plotly.express as px

    # Compute embeddings
    data[['x', 'y']] = pipe_pca.transform(data[CONFIG.features])

    # Display
    fig = px.scatter(data, x="x", y="y", color="label",
        hover_data=data.columns.tolist(),
        color_discrete_sequence=px.colors.qualitative.Pastel2,
        template='none', title=str(pipe_pca))

    # Show
    fig








.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-2.14.0.min.js"></script>                <div id="f5d0b58f-1af7-49f9-b14b-0917414aef9e" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("f5d0b58f-1af7-49f9-b14b-0917414aef9e")) {                    Plotly.newPlot(                        "f5d0b58f-1af7-49f9-b14b-0917414aef9e",                        [{"customdata":[[5.1,3.5,1.4,0.2,0,"setosa"],[4.9,3.0,1.4,0.2,0,"setosa"],[4.7,3.2,1.3,0.2,0,"setosa"],[4.6,3.1,1.5,0.2,0,"setosa"],[5.0,3.6,1.4,0.2,0,"setosa"],[5.4,3.9,1.7,0.4,0,"setosa"],[4.6,3.4,1.4,0.3,0,"setosa"],[5.0,3.4,1.5,0.2,0,"setosa"],[4.4,2.9,1.4,0.2,0,"setosa"],[4.9,3.1,1.5,0.1,0,"setosa"],[5.4,3.7,1.5,0.2,0,"setosa"],[4.8,3.4,1.6,0.2,0,"setosa"],[4.8,3.0,1.4,0.1,0,"setosa"],[4.3,3.0,1.1,0.1,0,"setosa"],[5.8,4.0,1.2,0.2,0,"setosa"],[5.7,4.4,1.5,0.4,0,"setosa"],[5.4,3.9,1.3,0.4,0,"setosa"],[5.1,3.5,1.4,0.3,0,"setosa"],[5.7,3.8,1.7,0.3,0,"setosa"],[5.1,3.8,1.5,0.3,0,"setosa"],[5.4,3.4,1.7,0.2,0,"setosa"],[5.1,3.7,1.5,0.4,0,"setosa"],[4.6,3.6,1.0,0.2,0,"setosa"],[5.1,3.3,1.7,0.5,0,"setosa"],[4.8,3.4,1.9,0.2,0,"setosa"],[5.0,3.0,1.6,0.2,0,"setosa"],[5.0,3.4,1.6,0.4,0,"setosa"],[5.2,3.5,1.5,0.2,0,"setosa"],[5.2,3.4,1.4,0.2,0,"setosa"],[4.7,3.2,1.6,0.2,0,"setosa"],[4.8,3.1,1.6,0.2,0,"setosa"],[5.4,3.4,1.5,0.4,0,"setosa"],[5.2,4.1,1.5,0.1,0,"setosa"],[5.5,4.2,1.4,0.2,0,"setosa"],[4.9,3.1,1.5,0.2,0,"setosa"],[5.0,3.2,1.2,0.2,0,"setosa"],[5.5,3.5,1.3,0.2,0,"setosa"],[4.9,3.6,1.4,0.1,0,"setosa"],[4.4,3.0,1.3,0.2,0,"setosa"],[5.1,3.4,1.5,0.2,0,"setosa"],[5.0,3.5,1.3,0.3,0,"setosa"],[4.5,2.3,1.3,0.3,0,"setosa"],[4.4,3.2,1.3,0.2,0,"setosa"],[5.0,3.5,1.6,0.6,0,"setosa"],[5.1,3.8,1.9,0.4,0,"setosa"],[4.8,3.0,1.4,0.3,0,"setosa"],[5.1,3.8,1.6,0.2,0,"setosa"],[4.6,3.2,1.4,0.2,0,"setosa"],[5.3,3.7,1.5,0.2,0,"setosa"],[5.0,3.3,1.4,0.2,0,"setosa"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"setosa","marker":{"color":"rgb(179,226,205)","symbol":"circle"},"mode":"markers","name":"setosa","orientation":"v","showlegend":true,"x":[-2.264702808807588,-2.0809611519657665,-2.3642290538902997,-2.299384217042707,-2.389842166313844,-2.075630948176512,-2.4440288351341515,-2.2328471588720142,-2.33464047790762,-2.184328174933941,-2.166310100701322,-2.3261308664426976,-2.2184508988224083,-2.6331006957652265,-2.19874060326669,-2.262214531601021,-2.207587695824592,-2.190349509192298,-1.898571995802842,-2.343369053074992,-1.9143229960825674,-2.2070128431947977,-2.774344702927331,-1.8186695286958487,-2.2271633057066373,-1.9518463309003753,-2.0511513727294144,-2.1685771746542155,-2.139563451301331,-2.26526149315424,-2.1401221356479834,-1.8315947706760278,-2.614947935858934,-2.4461773916965144,-2.1099748753186516,-2.207808899078265,-2.045146206754201,-2.5273319131704852,-2.429632575084545,-2.1697107116306626,-2.2864751433456694,-1.8581224563735703,-2.5536383956143545,-1.96444768376374,-2.137059005811622,-2.0697442995918287,-2.384733165778262,-2.394376314219632,-2.229446547942674,-2.2038334355191296],"xaxis":"x","y":[0.4800265965209884,-0.6741335566053529,-0.34190802388467656,-0.5973945076746757,0.6468353829020259,1.489177523321165,0.04764419763001346,0.22314807268959092,-1.1153276754616661,-0.469013561402376,1.0436906530538586,0.13307833523923077,-0.7286761653165708,-0.9615067291701629,1.860057113293929,2.6862844851105896,1.483609363155571,0.48883831648632675,1.4050187944665475,1.1278493819084745,0.40885570775590535,0.9241214267468971,0.4583436677529144,0.08555852628736553,0.13725445536342645,-0.6256185877766767,0.24216355266166623,0.5271495253082664,0.313217810139951,-0.3377319037604809,-0.5045406901415186,0.423695067603785,1.7935758561044266,2.1507278773929217,-0.46020184143703763,-0.20610739768843733,0.6615581114631071,0.5922927741908083,-0.904180040376148,0.26887896143546997,0.4417153876990491,-2.3374151575533464,-0.4791006901223144,0.47232666771925996,1.1422292620394072,-0.7110527253858939,1.1204297019845348,-0.38624687258915746,0.997959764307979,0.009216357521275635],"yaxis":"y","type":"scatter"},{"customdata":[[7.0,3.2,4.7,1.4,1,"versicolor"],[6.4,3.2,4.5,1.5,1,"versicolor"],[6.9,3.1,4.9,1.5,1,"versicolor"],[5.5,2.3,4.0,1.3,1,"versicolor"],[6.5,2.8,4.6,1.5,1,"versicolor"],[5.7,2.8,4.5,1.3,1,"versicolor"],[6.3,3.3,4.7,1.6,1,"versicolor"],[4.9,2.4,3.3,1.0,1,"versicolor"],[6.6,2.9,4.6,1.3,1,"versicolor"],[5.2,2.7,3.9,1.4,1,"versicolor"],[5.0,2.0,3.5,1.0,1,"versicolor"],[5.9,3.0,4.2,1.5,1,"versicolor"],[6.0,2.2,4.0,1.0,1,"versicolor"],[6.1,2.9,4.7,1.4,1,"versicolor"],[5.6,2.9,3.6,1.3,1,"versicolor"],[6.7,3.1,4.4,1.4,1,"versicolor"],[5.6,3.0,4.5,1.5,1,"versicolor"],[5.8,2.7,4.1,1.0,1,"versicolor"],[6.2,2.2,4.5,1.5,1,"versicolor"],[5.6,2.5,3.9,1.1,1,"versicolor"],[5.9,3.2,4.8,1.8,1,"versicolor"],[6.1,2.8,4.0,1.3,1,"versicolor"],[6.3,2.5,4.9,1.5,1,"versicolor"],[6.1,2.8,4.7,1.2,1,"versicolor"],[6.4,2.9,4.3,1.3,1,"versicolor"],[6.6,3.0,4.4,1.4,1,"versicolor"],[6.8,2.8,4.8,1.4,1,"versicolor"],[6.7,3.0,5.0,1.7,1,"versicolor"],[6.0,2.9,4.5,1.5,1,"versicolor"],[5.7,2.6,3.5,1.0,1,"versicolor"],[5.5,2.4,3.8,1.1,1,"versicolor"],[5.5,2.4,3.7,1.0,1,"versicolor"],[5.8,2.7,3.9,1.2,1,"versicolor"],[6.0,2.7,5.1,1.6,1,"versicolor"],[5.4,3.0,4.5,1.5,1,"versicolor"],[6.0,3.4,4.5,1.6,1,"versicolor"],[6.7,3.1,4.7,1.5,1,"versicolor"],[6.3,2.3,4.4,1.3,1,"versicolor"],[5.6,3.0,4.1,1.3,1,"versicolor"],[5.5,2.5,4.0,1.3,1,"versicolor"],[5.5,2.6,4.4,1.2,1,"versicolor"],[6.1,3.0,4.6,1.4,1,"versicolor"],[5.8,2.6,4.0,1.2,1,"versicolor"],[5.0,2.3,3.3,1.0,1,"versicolor"],[5.6,2.7,4.2,1.3,1,"versicolor"],[5.7,3.0,4.2,1.2,1,"versicolor"],[5.7,2.9,4.2,1.3,1,"versicolor"],[6.2,2.9,4.3,1.3,1,"versicolor"],[5.1,2.5,3.0,1.1,1,"versicolor"],[5.7,2.8,4.1,1.3,1,"versicolor"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"versicolor","marker":{"color":"rgb(253,205,172)","symbol":"circle"},"mode":"markers","name":"versicolor","orientation":"v","showlegend":true,"x":[1.1017811830529471,0.7313374253960871,1.2409793195158305,0.4074830588173854,1.075474700609078,0.3886873365356651,0.7465297413291605,-0.4873227421256389,0.9279016383549449,0.011426188736980768,-0.11019628000062824,0.4406934489830784,0.562108306443179,0.7195618886754964,-0.033354703178772024,0.8754071908577372,0.350251667995083,0.15881004754797148,1.2250936335624314,0.1649178993863276,0.7376826487712581,0.4762871909409713,1.2341780976571488,0.6328581997098217,0.702661183136182,0.8742736538812899,1.256509116541883,1.3584051214406314,0.6648003672253947,-0.04025861090059525,0.13079517549786093,0.02345268897055119,0.24153827295451102,1.061094608842614,0.22397877351238007,0.42913911551616063,1.048728051209087,1.044531384396279,0.06958832111642316,0.28347723828757576,0.2790777760554613,0.6245697914985714,0.3365303701314359,-0.3621833846193826,0.28858623882315765,0.09136065565450549,0.2277168655347002,0.5763882886534785,-0.4476670190286111,0.2567305888875848],"xaxis":"x","y":[0.8629724182621585,0.5946147256694242,0.6162976544374981,-1.754403989323409,-0.20842104605096512,-0.5932836359900746,0.7730193120985962,-1.8524290868575728,0.03222607789115399,-1.0340182751294398,-2.654072818536562,-0.06329518843800137,-1.7647243806169435,-0.18622460583150546,-0.4390032099816244,0.5090639567734084,-0.19631173455144388,-0.7920957424327207,-1.6222438030914998,-1.3026092302957715,0.3965715619602386,-0.4173202812135505,-0.9333257287992774,-0.41638772088909903,-0.06341181972479995,0.25079339290061203,-0.07725601969586864,0.3313116817908981,-0.22592785469484336,-1.058718546553908,-1.5622718342099662,-1.572475594216703,-0.777256382584841,-0.6338432447349461,-0.2877735120432021,0.8455822409050779,0.5220517968629425,-1.3829887191907804,-0.21950333464771485,-1.3293246390695754,-1.1200285237424026,0.024923029254012734,-0.9884040176703591,-2.0192378732386103,-0.8557303199870656,-0.18119212582577518,-0.38492008098735353,-0.15487359721655855,-1.543792034397755,-0.5988517961556689],"yaxis":"y","type":"scatter"},{"customdata":[[6.3,3.3,6.0,2.5,2,"virginica"],[5.8,2.7,5.1,1.9,2,"virginica"],[7.1,3.0,5.9,2.1,2,"virginica"],[6.3,2.9,5.6,1.8,2,"virginica"],[6.5,3.0,5.8,2.2,2,"virginica"],[7.6,3.0,6.6,2.1,2,"virginica"],[4.9,2.5,4.5,1.7,2,"virginica"],[7.3,2.9,6.3,1.8,2,"virginica"],[6.7,2.5,5.8,1.8,2,"virginica"],[7.2,3.6,6.1,2.5,2,"virginica"],[6.5,3.2,5.1,2.0,2,"virginica"],[6.4,2.7,5.3,1.9,2,"virginica"],[6.8,3.0,5.5,2.1,2,"virginica"],[5.7,2.5,5.0,2.0,2,"virginica"],[5.8,2.8,5.1,2.4,2,"virginica"],[6.4,3.2,5.3,2.3,2,"virginica"],[6.5,3.0,5.5,1.8,2,"virginica"],[7.7,3.8,6.7,2.2,2,"virginica"],[7.7,2.6,6.9,2.3,2,"virginica"],[6.0,2.2,5.0,1.5,2,"virginica"],[6.9,3.2,5.7,2.3,2,"virginica"],[5.6,2.8,4.9,2.0,2,"virginica"],[7.7,2.8,6.7,2.0,2,"virginica"],[6.3,2.7,4.9,1.8,2,"virginica"],[6.7,3.3,5.7,2.1,2,"virginica"],[7.2,3.2,6.0,1.8,2,"virginica"],[6.2,2.8,4.8,1.8,2,"virginica"],[6.1,3.0,4.9,1.8,2,"virginica"],[6.4,2.8,5.6,2.1,2,"virginica"],[7.2,3.0,5.8,1.6,2,"virginica"],[7.4,2.8,6.1,1.9,2,"virginica"],[7.9,3.8,6.4,2.0,2,"virginica"],[6.4,2.8,5.6,2.2,2,"virginica"],[6.3,2.8,5.1,1.5,2,"virginica"],[6.1,2.6,5.6,1.4,2,"virginica"],[7.7,3.0,6.1,2.3,2,"virginica"],[6.3,3.4,5.6,2.4,2,"virginica"],[6.4,3.1,5.5,1.8,2,"virginica"],[6.0,3.0,4.8,1.8,2,"virginica"],[6.9,3.1,5.4,2.1,2,"virginica"],[6.7,3.1,5.6,2.4,2,"virginica"],[6.9,3.1,5.1,2.3,2,"virginica"],[5.8,2.7,5.1,1.9,2,"virginica"],[6.8,3.2,5.9,2.3,2,"virginica"],[6.7,3.3,5.7,2.5,2,"virginica"],[6.7,3.0,5.2,2.3,2,"virginica"],[6.3,2.5,5.0,1.9,2,"virginica"],[6.5,3.0,5.2,2.0,2,"virginica"],[6.2,3.4,5.4,2.3,2,"virginica"],[5.9,3.0,5.1,1.8,2,"virginica"]],"hovertemplate":"label=%{customdata[5]}<br>x=%{x}<br>y=%{y}<br>sepal length (cm)=%{customdata[0]}<br>sepal width (cm)=%{customdata[1]}<br>petal length (cm)=%{customdata[2]}<br>petal width (cm)=%{customdata[3]}<br>target=%{customdata[4]}<extra></extra>","legendgroup":"virginica","marker":{"color":"rgb(203,213,232)","symbol":"circle"},"mode":"markers","name":"virginica","orientation":"v","showlegend":true,"x":[1.8445688677230287,1.1578816132057799,2.205266791075377,1.4401506638275392,1.8678122203305372,2.7518733356662755,0.3670176878607252,2.3024394446251963,2.0066864676766056,2.2597773490124995,1.3641754921860074,1.6026786704779303,1.8839007017032423,1.260115099197508,1.467645201017324,1.5900773176145653,1.471431461133318,2.4263289873156997,3.3106955839338865,1.263766673639828,2.0377163014694037,0.9779807342494218,2.8976514907341677,1.3332321759732086,1.7007338974912167,1.9543267058530702,1.1751036315549324,1.020950550695791,1.7883499201796655,1.8636475533282604,2.4359537279227026,2.3049277218317634,1.8627032197949553,1.1141477406864746,1.2024733016783908,2.7987704475781072,1.5762559101947538,1.3462921036270616,0.9248249165424193,1.8520450517676694,2.014810429954875,1.9017840902621885,1.1578816132057799,2.040558228052092,1.9981470959523757,1.8705032929564103,1.564580483030328,1.5211704996278375,1.3727877895140728,0.9606560300371279],"xaxis":"x","y":[0.8704213123248228,-0.6988698623306897,0.5620104770083556,-0.0469875881058063,0.2950448244570198,0.800409201027542,-1.5615028914765046,0.42006557964277647,-0.7114386535471579,1.9210103764598854,0.6927564544903866,-0.42170044977261667,0.4192496506051235,-1.1622604214064625,-0.44227158737708205,0.6762448057233198,0.2556218244714706,2.5566612507954902,0.017780949320627917,-1.7067453803762658,0.9104674096183104,-0.5717643248129913,0.4136410595956481,-0.4818112186494288,1.013921867322791,1.0077775961534519,-0.3163944723097906,0.06434602923956197,-0.18736121459082838,0.5622907258861446,0.2592844331442805,2.6263234682323766,-0.17854949462549,-0.292922623335731,-0.8113152708396676,0.8568033294971054,1.068581107320807,0.42243061085250816,0.017223100452284264,0.6761281744365213,0.6138856369235749,0.6895754942430022,-0.6988698623306897,0.867520600955228,1.0491687471841444,0.38696608166572555,-0.8966868088965253,0.2690691442779517,1.0112544185267922,-0.024331668169399183],"yaxis":"y","type":"scatter"}],                        {"template":{"data":{"scatter":[{"type":"scatter"}]}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"x"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"y"}},"legend":{"title":{"text":"label"},"tracegroupgap":0},"title":{"text":"Pipeline(steps=[('std', StandardScaler()), ('pca', PCA(n_components=2))])"}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 172-173

To visualise all the embeddings (in your local machine)

.. GENERATED FROM PYTHON SOURCE LINES 173-185

.. code-block:: default
   :lineno-start: 173

    for i,p in enumerate([pipe_pca, pipe_first]):

        # Compute embeddings
        data[['x', 'y']] = p.transform(data[CONFIG.features])

        # Display
        fig = px.scatter(data, x="x", y="y", color="label",
                         hover_data=data.columns.tolist(),
                         color_discrete_sequence=px.colors.qualitative.Pastel2,
                         template='none', title=str(p))

        # Show (uncomment)
        #fig.show()







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.283 seconds)


.. _sphx_glr_download__examples_plot_create_pipeline_v1.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_create_pipeline_v1.py <plot_create_pipeline_v1.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_create_pipeline_v1.ipynb <plot_create_pipeline_v1.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
